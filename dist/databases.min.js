angular.module("databases.templates",["databases/databases-list.tpl.html"]),angular.module("databases/databases-list.tpl.html",[]).run(["$templateCache",function(a){a.put("databases/databases-list.tpl.html",'<div class="page-header"><h1>Databases</h1></div>\n\n<div class="row">\n    <div class="col-md-3 col-md-push-9">\n        <form class="facets-form">\n            <div class="form-group">\n                <span class="page-header">\n                    <h4>Filter Databases By</h4>\n                </span>\n            </div>\n            <div class="form-group">\n                <input type="text" class="form-control" ng-model="db.search" placeholder="Keyword search">\n            </div>\n\n            <div class="form-group hidden-xs">\n                <h5>Title starts with</h5>\n                <div class="facet-group alphanum-group">\n                    <div class="btn-group">\n                        <label class="btn btn-default" ng-repeat="na in numAlpha" ng-model="db.startsWith" btn-radio="\'{{na}}\'" ng-disabled="startsWithDisabled[na]" uncheckable>{{na}}</label>\n                    </div>\n                </div>\n            </div>\n\n            <div class="form-group hidden-xs">\n                <h5>Subjects</h5>\n                <div class="facet-group">\n                    <div class="radio" ng-class="{\'disabled\': subj.disabled}" ng-repeat="subj in subjects">\n                        <label>\n                            <input type="checkbox" ng-model="db.subjects[subj.subject]" ng-disabled="subj.disabled">\n                            {{subj.subject}} ({{subj.total}})\n                        </label>\n                    </div>\n                </div>\n            </div>\n\n            <div class="form-group hidden-xs">\n                <h5>Types</h5>\n                <div class="facet-group">\n                    <div class="radio" ng-class="{\'disabled\': type.disabled}" ng-repeat="type in types">\n                        <label>\n                            <input type="checkbox" ng-model="db.types[type.type]"  ng-disabled="type.disabled">\n                            {{type.type}} ({{type.total}})\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div class="form-group">\n                <button type="button" class="btn btn-block btn-primary" ng-click="resetFilters()"><span class="fa fa-fw fa-refresh"></span> Reset filters</button>\n            </div>\n        </form>\n    </div>\n    <div class="col-md-9 col-md-pull-3 databases-list-container">\n        <p>\n        <h4 class="text-right">Showing {{pager.firstItem}} - {{pager.lastItem}} of {{pager.totalItems}} results</h4>\n        <div ng-if="!!activeFilters.startsWith || activeFilters.subjects || activeFilters.types">\n\n        <ol class="breadcrumb facetcrumb">\n            <li ng-if="!!activeFilters.startsWith"><strong>Starts with:</strong> <button type="button" class="btn btn-default" ng-click="db.startsWith = \'\'">"{{db.startsWith}}" <span class="text-muted" aria-hidden="true">&times;</span></button></li>\n            <li ng-if="activeFilters.subjects"><strong>Subjects:</strong> <button type="button" class="btn btn-default" ng-click="db.subjects[subject] = false" ng-repeat="(subject, key) in db.subjects">{{subject}} <span class="text-muted" aria-hidden="true">&times;</span></button></li>\n            <li ng-if="activeFilters.types"><strong>Types:</strong> <button type="button" class="btn btn-default" ng-click="db.types[type] = false" ng-repeat="(type, key) in db.types">{{type}} <span class="text-muted" aria-hidden="true">&times;</span></button></li>\n            <li class="pull-right"><button type="button" class="btn btn-primary btn-small reset-btn" title="Reset filters" ng-click="resetFilters()"><i class="fa fa-refresh"></i></button></li>\n        </ol>\n        </div>\n\n\n        </p>\n\n        <div class="text-center">\n            <pagination class="pagination-sm" ng-model="pager.page" total-items="pager.totalItems" max-size="pager.maxSize" boundary-links="true" rotate="false" items-per-page="pager.perPage" ng-change="pageChange()" ng-if="pager.totalItems > pager.perPage"></pagination>\n        </div>\n\n        <div class="media animate-repeat" ng-repeat="item in filteredDB | after:(pager.page-1)*pager.perPage | limitTo:20">\n            <div class="media-body">\n\n                <h4 class="media-heading">\n                    <a ng-href="{{item.url}}" title="{{item.title}}" ng-bind-html="item.title | customHighlight:db.search"></a>\n                    <!--<small ng-if="item.presentedBy">({{item.presentedBy}})</small>-->\n                    <small ng-bind-html="item.coverage | customHighlight:db.search"></small>\n\n                    <small class="pull-right">\n                        <span class="label label-success" ng-if="item.hasFullText == \'A\'">All Full Text</span>\n                        <span class="label label-info" ng-if="item.hasFullText == \'P\'">Primarily Full Text</span>\n                        <span class="label label-warning" ng-if="item.hasFullText == \'S\'">Some Full Text</span>\n                        <span class="label label-danger" ng-if="item.hasFullText == \'N\'">No Full Text</span>\n                    </small>\n                </h4>\n\n                <p class="text-justify" ng-bind-html="item.description | customHighlight:db.search"></p>\n\n                <div ng-if="item.location">\n                    <strong>Access:</strong> {{item.location}}\n                </div>\n                <div class="databases-details" ng-if="(item.subjects | where:{type:1}).length > 0">\n                    <strong>Primary subjects: </strong>\n                    <span ng-repeat="subj in item.subjects | where:{type:1}" ng-bind-html="subj.subject | customHighlight:db.search"></span>\n                </div>\n                <div class="databases-details" ng-if="item.types">\n                    <strong>Types of material: </strong>\n                    <span ng-repeat="type in item.types" ng-bind-html="type.type | customHighlight:db.search"></span>\n                </div>\n                <div class="scout-coverage">\n                    <strong>Scout coverage: </strong>\n                    <span class="fa text-info" ng-class="{\'fa-circle\': item.notInEDS == \'Y\', \'fa-adjust\': item.notInEDS == \'P\', \'fa-circle-o\': !item.notInEDS}">\n                    </span>\n                    <span ng-if="item.notInEDS == \'Y\'">Full</span>\n                    <span  ng-if="item.notInEDS == \'P\'">Partial</span>\n                    <span  ng-if="!item.notInEDS">Not in Scout</span>\n                </div>\n            </div>\n        </div>\n\n        <div class="text-center">\n            <pagination class="pagination-sm" ng-model="pager.page" total-items="pager.totalItems" max-size="pager.maxSize" boundary-links="true" rotate="false" items-per-page="pager.perPage" ng-change="pageChange()" ng-if="pager.totalItems > pager.perPage"></pagination>\n        </div>\n\n        <div class="alert alert-warning text-center" role="alert" ng-show="pager.totalItems < 1">\n            <h2>No results found <span ng-if="db.search"> for "{{db.search}}"</span></h2>\n        </div>\n    </div>\n</div>')}]),angular.module("ualib.databases",["ngRoute","ngResource","ngAnimate","ngSanitize","ui.bootstrap","angular.filter","duScroll","ualib.ui","databases.templates"]).constant("DB_PROXY_PREPEND_URL","http://libdata.lib.ua.edu/login?url="),angular.module("ualib.databases").factory("databasesFactory",["$resource","$http","$filter","DB_PROXY_PREPEND_URL",function(a,b,c,d){function e(a,b){return a=angular.isArray(a)?a:[a],a.concat(b)}return a("//wwwdev2.lib.ua.edu/databases/api/:db",{db:"all"},{get:{cache:!0,method:"GET",transformResponse:e(b.defaults.transformResponse,function(a){var b=angular.fromJson(a),e=c("orderBy")(b.databases,"title");return angular.forEach(e,function(a,b){var c;switch(e[b].location){case"UA":c="On campus only";break;case"UA, Remote":c="myBama login required off campus";break;case"www":case"WWW":c=!1;break;default:c=e[b].location}"1"==e[b].auth&&(e[b].url=d+e[b].url),e[b].access=c,e[b].position=b,e[b].inScout="Y"===e[b].notInEDS}),b.databases=e,b})}})}]),angular.module("ualib.databases").config(["$routeProvider",function(a){a.when("/databases",{reloadOnSearch:!1,resolve:{databases:["databasesFactory",function(a){return a.get({db:"active"}).$promise.then(function(a){return a},function(a,b,c,d){console.log("ERROR: databases"),console.log({data:a,status:b,headers:c,config:d})})}]},templateUrl:"databases/databases-list.tpl.html",controller:"DatabasesListCtrl"})}]).controller("DatabasesListCtrl",["$scope","databases","$filter","$location","$document",function(a,b,c,d,e){function f(a,b){if(b){b=(""+b).toLowerCase();var c=[].concat.apply([],b.split('"').map(function(a,b){return b%2?a:a.split(" ")})).filter(Boolean),d=c.filter(function(b){return(""+a).toLowerCase().indexOf(b)>-1});return d.length===c.length}return!0}function g(){a.pager.totalItems=a.filteredDB.length;var b=Math.floor(a.pager.totalItems/a.pager.maxSize);b<a.pager.page&&(a.pager.page=b||1),a.pager.firstItem=(a.pager.page-1)*a.pager.perPage+1,a.pager.lastItem=Math.min(a.pager.totalItems,a.pager.page*a.pager.perPage)}function h(b){var c=Object.keys(a.db.subjects).filter(function(b){return a.db.subjects[b]});return b.subjects.filter(function(b){return a.db.subjects[b.subject]}).length===c.length}function i(b){var c=Object.keys(a.db.types).filter(function(b){return a.db.types[b]});return b.types.filter(function(b){return a.db.types[b.type]}).length===c.length}function j(b){for(var c=[],d={},e=[],f={},g=0,h=b.length;h>g;g++)b[g].subjects.map(function(a){-1==c.indexOf(a.sid)?(c.push(a.sid),d[a.sid]=1):d[a.sid]++}),b[g].types.map(function(a){-1==e.indexOf(a.tid)?(e.push(a.tid),f[a.tid]=1):f[a.tid]++});a.subjects.map(function(a){var b=a;return b.disabled=-1==c.indexOf(b.sid),b.total=d[a.sid]||0,b}),a.types.map(function(a){var b=a;return b.disabled=-1==e.indexOf(b.tid),b.total=f[a.tid]||0,b})}function k(b){a.startsWithDisabled={},a.numAlpha.map(function(d){for(var e=-1==d.indexOf("-")?"^"+d+".+$":"^["+d+"].+$",f=0,g=b.length;g>f;f++)if(c("test")(b[f].title,e,"i"))return;a.startsWithDisabled[d]=!0})}function l(a,b){return a.subjects.filter(function(a){return 1===parseInt(a.type)&&b[a.subject]}).length}function m(a){angular.forEach(a,function(a,b){angular.isDefined(a)&&""!==a?angular.isObject(a)?(a=Object.keys(a).filter(function(b){return a[b]}).join(","),a.length>0?d.search(b,a):d.search(b,null)):d.search(b,a):d.search(b,null)})}function n(){var b=d.search(),c={};angular.copy(a.db,c),a.activeFilters=b,b.page&&(a.pager.page=b.page),angular.forEach(c,function(a,d){if(angular.isDefined(b[d]))if("subjects"==d||"types"==d){var e={};b[d].split(",").forEach(function(a){e[a]=!0}),c[d]=e}else c[d]=b[d];else c[d]=angular.isObject(a)?{}:""}),a.db=c}var o=[];a.numAlpha="abcdefghijklmnopqrstuvwxyz".toUpperCase().split(""),a.numAlpha.unshift("0-9"),b.$promise.then(function(b){o=b.databases,a.subjects=b.subjects,a.types=b.types,a.resetFilters(),n(),a.totalItems=b.totalRecords,k(o),j(o)}),a.$on("$locationChangeSuccess",function(){n()});var p=a.$watch("db",function(b,d){var e=o;if(e=c("filter")(e,h),e=c("filter")(e,i),e=c("filter")(e,b.search,f),b.startsWith){var k=-1==b.startsWith.indexOf("-")?"^"+b.startsWith+".+$":"^["+b.startsWith+"].+$";e=c("filter")(e,function(a){return c("test")(a.title,k,"i")})}e.sort(function(a,c){var d=l(a,b.subjects),e=l(c,b.subjects);return d===e?a.position-c.position:d>e?-1:1}),a.filteredDB=e,g();var n=angular.extend({},b,{page:a.pager.page});j(e),m(n)},!0);a.resetFilters=function(){a.db={subjects:{},types:{},search:"",startsWith:""},a.pager={page:1,perPage:20,maxSize:10,totalItems:0}},a.pageChange=function(){g(),m({page:a.pager.page}),e.duScrollTo(0,30,500,function(a){return--a*a*a+1})},a.$on("$destroy",function(){p()})}]).filter("customHighlight",["$sce",function(a){return function(b,c){if(c){var d=/(<\S[^><]*>)/g,e=[].concat.apply([],c.split('"').map(function(a,b){return b%2?a:a.split(" ")})).filter(Boolean).join("|"),f=new RegExp("("+e+")","gi");b=b.split(d).map(function(a){return a.match(d)?a:a.replace(f,'<span class="ui-match">$1</span>')}).join("")}return a.trustAsHtml(b)}}]);